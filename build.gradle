buildscript {

  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }

  dependencies {
    classpath 'com.bmuschko:gradle-tomcat-plugin:2.3'
    classpath "kz.greetgo.plugins:greetgo.gradle.plugins:0.0.5"
  }
}

import kz.greetgo.gradle.plugins.ShortJavaPathPlugin

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'signing'
  apply plugin: ShortJavaPathPlugin

  version = '3.0.6'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }

  group = "kz.greetgo.mvc"

  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
  }

  jar {
    manifest {
      attributes 'Implementation-Title': project.name
      attributes 'Implementation-Version': version
      attributes 'Implementation-Vendor': "greetgo!"
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
    }
  }

  idea.module.downloadSources = true
  idea.module.downloadJavadoc = true
  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  test.useTestNG()
}

subprojects {

  dependencies {
    ext.jettyVersion = '9.2+'
    ext.greetgoUtilVersion = '0.1.3'
    ext.servletApiVersion = '3.1.0'
    ext.jacksonVersion = '2.7.3'
    ext.assertjVersion = "3.12.2"

    testCompile 'org.testng:testng:6.14.3'
    testCompile "org.assertj:assertj-core:${assertjVersion}"
  }


}
